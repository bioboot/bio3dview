% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/view_ngl.R
\name{view.pdb}
\alias{view.pdb}
\title{Interactive PDB Viewing}
\usage{
view.pdb(
  pdb,
  cols = NULL,
  colorScheme = "residueindex",
  representation = "cartoon",
  ligand = TRUE,
  ligand.style = "licorice",
  backgroundColor = "white",
  highlight = NULL,
  highlight.style = "ball+stick",
  water.rm = FALSE
)
}
\arguments{
\item{pdb}{a PDB structure object as obtained from \code{read.pdb()}.}

\item{cols}{a vector of colors, typically one entry per chain. If \code{NULL} then \code{colorScheme} is used. If numeric then output of \code{vmd.colors(cols)} is used.}

\item{colorScheme}{keyword based coloring used only if \code{cols} input is NULL. Possible values include "residueindex", "modelindex", "sstruc", "bfactor", "chainid", "chainindex", "atomindex", and "occupancy".}

\item{representation}{the representation style, useful values are "line", "tube", "cartoon", "trace", "backbone", and "ball+stick".}

\item{ligand}{logical, if TRUE ligands will be rendered as atom colored \code{ligand.style}.}

\item{ligand.style}{the representation style to use for ligands.}

\item{backgroundColor}{a single element color vector that set the display area background color.}

\item{highlight}{an optional \code{atom.select()} object for highlighting.}

\item{highlight.style}{the representation style to use for selected \code{highlight} atoms.}
}
\value{
an \strong{NGLVieweR} display object that can be displayed or further added to using \code{NGLVieweR::addRepresentation()} and friends.
}
\description{
Generate a quick NGL (webGL based) structure overview of \strong{bio3d} \code{pdb} class
objects with a number of simple defaults. The returned \strong{NGLVieweR} object
can be further added to for custom interactive visualizations.
}
\details{
The purpose of this function is to quickly view a given PDB
structure object without having to write output files for input to molecular
graphics programs or write multiple lines of NGLVieweR code.

The extra argument \code{highlight} takes a \strong{bio3d} \code{atom.select()} object to highlight
atom subsets as a given \code{highlight.style}. Useful \code{highlight.style} options include:
\emph{"ball+stick"}, \emph{"spacefill"}, \emph{"licorice"}, \emph{"line"}, \emph{"surface"} and
\emph{"ribbon"}.

The full set of supported \code{representation} styles include:
\itemize{
\item "cartoon",
\item "ribbon",
\item "tube",
\item "trace",
\item "ball+stick",
\item "line",
\item "backbone",
\item "licorice",
\item "surface",
\item "point",
\item "rope",
\item "spacefill".
}

Available \code{colorScheme} options include:
\itemize{
\item "residueindex",
\item "resname",
\item "modelindex",
\item "sstruc",
\item "bfactor",
\item "chainid",
\item "chainindex",
\item "chainname",
\item "atomindex",
\item "occupancy",
\item "hydrophobicity",
\item "random",
\item "element",
\item "validation",
}

Limitations:
Currently the function attempts to map common abbreviations and acronyms of
\code{colorScheme} and \code{representation} values (e.g. "cpk" for "ballandstick",
"sse" for "sstruct", etc.). If a mapping is not available then the default
values of "residueindex" and "ball+stick" are used respectively.
Currently the function does not check for bio3d or NGLVieweR
availability. It also does not work well with trajectory
or \code{pdbs} objects. For the later use \code{view.pdbs()}.
}
\examples{
 pdb <- read.pdb("1hsg")
 view.pdb(pdb)
 view.pdb(pdb, ligand=FALSE, cols=c("pink","aquamarine"))
 view.pdb(pdb, colorScheme = "sstruc")

 #ras <- read.pdb("5p21")
 #view.pdb(ras)

 sele <- atom.select(pdb, resno=c(25, 50))
 view.pdb(pdb, highlight = sele,
        cols = c("navy","orange"),
        backgroundColor = "pink",
        highlight.style = "spacefill")

}
\seealso{
\code{pdb2string()}, \code{view.pdbs()},
\code{NGLVieweR::NGLVieweR()}, \code{bio3d::read.pdb()}
}
\author{
Barry Grant, \email{bjgrant@ucsd.edu}
}
