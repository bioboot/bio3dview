% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/view_ngl.R
\name{view.pdbs}
\alias{view.pdbs}
\title{Interactive PDBS Viewing}
\usage{
view.pdbs(
  pdbs,
  cols = NULL,
  colorScheme = NULL,
  representation = "cartoon",
  backgroundColor = "white"
)
}
\arguments{
\item{pdbs}{a multi-structure \code{pdbs} object as obtained from \code{pdbaln()}, \code{read.fasta.pdb()}, etc.}

\item{cols}{a vector of colors, typically one entry per structure. If \code{NULL} then the output of \code{vmd.colors()} is used.}

\item{colorScheme}{if not NULL then this over-rides the previous \code{cols} input argument. Possible values include "residueindex", "modelindex", "sstruc", "bfactor", "chainid", "chainindex", "atomindex", "occupancy"}

\item{representation}{the representation style, useful values are line, tube, cartoon, trace, and backbone, ball+stick.}

\item{backgroundColor}{set the display area background color.}
}
\value{
an \strong{NGLVieweR} display object that can be displayed or further added to using \code{NGLVieweR::addRepresentation()} and friends.
}
\description{
Quick interactive multi-structure ensemble \strong{bio3d} \code{pdbs} object viewing
using the \strong{NGLVieweR} package.
}
\details{
Just like the related \code{view.pdb()} function the objective here is to speed up
the inspection of multi structure ensembles without having to write out many
aligned and superposed individual PDB files for viewing in a external
molecular viewer (like PyMol, Mol-star, or VMD - all of which are excellent
but often overkill for a quick inspection) or write many lines of \strong{NGLVieweR}
code that loop through all structures in a given \code{pdbs} object.
}
\examples{
  #pth <- "~/Desktop/courses/BIMM143/class10/pdbs/split_chain/"
  #files <- list.files(path=pth, full.names = TRUE)
  #pdbs <- bio3d::pdbaln(files, fit=TRUE, exefile="msa")

 data(transducin, package="bio3d")
 attach(transducin)

 view.pdbs(pdbs)
 view.pdbs(pdbs, representation = "cartoon")
 # Trace, tube, line, cartoon, ball+stick
 view.pdbs(pdbs, representation = "trace")
 view.pdbs(pdbs, cols = c("red","blue") )
 # Perhaps this should be the default?
 view.pdbs(pdbs, colorScheme = "residueindex")

}
\seealso{
\code{bio3d::pdbaln()}, \code{bio3d::read.fasta.pdb()},
\code{pdbs2string()}, \code{view.pdb()},
\code{NGLVieweR::NGLVieweR()}, \code{bio3d::read.pdb()}
}
\author{
Barry Grant, \email{bjgrant@ucsd.edu}
}
